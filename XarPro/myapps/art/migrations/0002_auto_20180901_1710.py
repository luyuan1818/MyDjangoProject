# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-01 09:10
from __future__ import unicode_literals

import DjangoUeditor.models
import art.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('art', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Art',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='文章名')),
                ('summary', models.CharField(max_length=50, verbose_name='简洁描述')),
                ('content', models.CharField(max_length=100, verbose_name='详细描述')),
                ('author', models.CharField(max_length=20, unique=True, verbose_name='作者')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('cover', models.ImageField(blank=True, null=True, upload_to=art.models.save_file_path, verbose_name='封面')),
            ],
            options={
                'verbose_name': '所有文章',
                'verbose_name_plural': '所有文章',
                'db_table': 'a_art',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='标题')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='art.Category', verbose_name='所属分类')),
            ],
            options={
                'verbose_name': '小说分类',
                'verbose_name_plural': '小说分类',
                'db_table': 'a_category',
                'ordering': ['-add_time'],
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='章节名称')),
                ('content', DjangoUeditor.models.UEditorField(verbose_name='章节内容')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
            ],
            options={
                'verbose_name': '章节',
                'verbose_name_plural': '章节',
                'db_table': 'a_chapter',
                'ordering': ['publish_date'],
            },
        ),
        migrations.CreateModel(
            name='RollSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='卷集名称')),
                ('free_level', models.IntegerField(choices=[(1, 'free'), (2, 'vip')], default=1, verbose_name='免费等级')),
                ('art', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='art.Art', verbose_name='所属文章')),
            ],
            options={
                'verbose_name': '所有卷集',
                'verbose_name_plural': '所有卷集',
                'db_table': 'a_roll',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='chapter',
            name='rool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='art.RollSet', verbose_name='所属卷集'),
        ),
        migrations.AddField(
            model_name='art',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='art.Category', verbose_name='分类名'),
        ),
        migrations.AddField(
            model_name='art',
            name='tags',
            field=models.ManyToManyField(to='art.Tag', verbose_name='标签名'),
        ),
    ]
